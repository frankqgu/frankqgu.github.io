{"ast":null,"code":"import _slicedToArray from\"C:/Users/brbsm/Documents/GitHub/frankqgu.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";var parseOtherProjects=function parseOtherProjects(mdContent){var others=[];var lines=mdContent.split(\"\\n\");for(var i=0;i<lines.length;i++){var line=lines[i];if(line.startsWith(\"## \")){var name=line.substr(3).trim();var description=lines[++i].trim();var tags=lines[++i].split(\":\")[1].trim();var badges=[];var buttons=[];while(lines[++i]&&!lines[i].startsWith(\"- Badges:\")){}while(lines[++i]&&lines[i].startsWith(\"  - \")){var badgeLine=lines[i].substr(4).split(\"[\");var badgeName=badgeLine[0].trim();var badgeColor=badgeLine[1].split(\"]\")[0].trim();badges.push({text:badgeName,colorScheme:badgeColor});}while(lines[++i]&&lines[i].startsWith(\"  - \")){var buttonLine=lines[i].substr(4).split(\"[\");var buttonText=buttonLine[0].trim();var buttonHref=buttonLine[1].split(\"]\")[0].trim();buttons.push({text:buttonText,href:buttonHref});}others.push({name:name,description:description,tags:[tags],badges:badges,buttons:buttons});}}return others;};var OtherProjectsArray=function OtherProjectsArray(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),OtherProjects=_useState2[0],setOtherProjects=_useState2[1];useEffect(function(){fetch(\"/content/OtherProjects.md\").then(function(response){if(!response.ok){throw new Error(\"Failed to fetch markdown content\");}return response.text();}).then(function(mdContent){setOtherProjects(parseOtherProjects(mdContent));}).catch(function(error){console.error(\"Error fetching markdown content:\",error);});},[]);return OtherProjects;};export default OtherProjectsArray;","map":{"version":3,"names":["useState","useEffect","parseOtherProjects","mdContent","others","lines","split","i","length","line","startsWith","name","substr","trim","description","tags","badges","buttons","badgeLine","badgeName","badgeColor","push","text","colorScheme","buttonLine","buttonText","buttonHref","href","OtherProjectsArray","_useState","_useState2","_slicedToArray","OtherProjects","setOtherProjects","fetch","then","response","ok","Error","catch","error","console"],"sources":["C:/Users/brbsm/Documents/GitHub/frankqgu.github.io/src/components/OtherProjectsArray.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst parseOtherProjects = (mdContent) => {\r\n  const others = [];\r\n  const lines = mdContent.split(\"\\n\");\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const line = lines[i];\r\n\r\n    if (line.startsWith(\"## \")) {\r\n      const name = line.substr(3).trim();\r\n      const description = lines[++i].trim();\r\n      const tags = lines[++i].split(\":\")[1].trim();\r\n      const badges = [];\r\n      const buttons = [];\r\n\r\n      while (lines[++i] && !lines[i].startsWith(\"- Badges:\")) {}\r\n      while (lines[++i] && lines[i].startsWith(\"  - \")) {\r\n        const badgeLine = lines[i].substr(4).split(\"[\");\r\n        const badgeName = badgeLine[0].trim();\r\n        const badgeColor = badgeLine[1].split(\"]\")[0].trim();\r\n        badges.push({ text: badgeName, colorScheme: badgeColor });\r\n      }\r\n\r\n      while (lines[++i] && lines[i].startsWith(\"  - \")) {\r\n        const buttonLine = lines[i].substr(4).split(\"[\");\r\n        const buttonText = buttonLine[0].trim();\r\n        const buttonHref = buttonLine[1].split(\"]\")[0].trim();\r\n        buttons.push({ text: buttonText, href: buttonHref });\r\n      }\r\n\r\n      others.push({\r\n        name,\r\n        description,\r\n        tags: [tags],\r\n        badges,\r\n        buttons,\r\n      });\r\n    }\r\n  }\r\n\r\n  return others;\r\n};\r\n\r\nconst OtherProjectsArray = () => {\r\n  const [OtherProjects, setOtherProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/content/OtherProjects.md\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch markdown content\");\r\n        }\r\n        return response.text();\r\n      })\r\n      .then((mdContent) => {\r\n        setOtherProjects(parseOtherProjects(mdContent));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching markdown content:\", error);\r\n      });\r\n  }, []);\r\n\r\n  return OtherProjects;\r\n};\r\n\r\nexport default OtherProjectsArray;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}