{"ast":null,"code":"import _slicedToArray from\"C:/Users/brbsm/Documents/GitHub/frankqgu.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Divider,Stack,Text,Container,Box,HStack,Button,ButtonGroup,Card,CardBody,Image,Heading,SimpleGrid,Badge,Link,Center}from\"@chakra-ui/react\";import{Fade}from\"react-reveal\";import{useState}from\"react\";import ProjectsArray from\"./ProjectsArray\";import OtherProjectsArray from\"./OtherProjectsArray\";import TagsArray from\"./TagsArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Projects(_ref){var color=_ref.color;var projects=ProjectsArray();var others=OtherProjectsArray();var options=TagsArray(\"ProjectsTags\");var _useState=useState(\"All\"),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var handleSelected=function handleSelected(value){setSelected(value);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Container,{maxW:\"3xl\",id:\"projects\",children:/*#__PURE__*/_jsxs(Stack,{as:Box,textAlign:\"center\",spacing:{base:8,md:14},pb:{base:20,md:36},children:[/*#__PURE__*/_jsxs(Stack,{align:\"center\",direction:\"row\",p:4,children:[/*#__PURE__*/_jsxs(HStack,{mx:4,children:[/*#__PURE__*/_jsx(Text,{color:\"\".concat(color,\".400\"),fontWeight:800,children:\"03\"}),/*#__PURE__*/_jsx(Text,{fontWeight:800,children:\"Projects\"})]}),/*#__PURE__*/_jsx(Divider,{orientation:\"horizontal\"})]}),/*#__PURE__*/_jsx(Stack,{px:4,spacing:4,children:projects.map(function(project){return/*#__PURE__*/_jsx(Fade,{bottom:true,children:/*#__PURE__*/_jsxs(Card,{direction:{base:\"column\"},overflow:\"hidden\",children:[/*#__PURE__*/_jsx(Image,{objectFit:\"cover\",src:project.image}),/*#__PURE__*/_jsx(Stack,{children:/*#__PURE__*/_jsxs(CardBody,{align:\"left\",children:[/*#__PURE__*/_jsx(Heading,{size:\"md\",children:project.name}),/*#__PURE__*/_jsx(Text,{py:2,children:project.description}),/*#__PURE__*/_jsx(HStack,{py:2,children:project.buttons.map(function(button){return/*#__PURE__*/_jsx(\"a\",{href:button.href,children:/*#__PURE__*/_jsx(Button,{color:\"\".concat(color,\".400\"),children:button.text})},button.text);})}),/*#__PURE__*/_jsx(HStack,{pt:4,spacing:2,children:project.badges.map(function(badge){return/*#__PURE__*/_jsx(Badge,{colorScheme:badge.colorScheme,children:badge.text},badge.text);})})]})})]},project.name)});})}),/*#__PURE__*/_jsx(Text,{color:\"gray.600\",fontSize:\"xl\",px:4,children:\"Other Projects\"}),/*#__PURE__*/_jsx(Center,{px:4,children:/*#__PURE__*/_jsxs(ButtonGroup,{variant:\"outline\",children:[/*#__PURE__*/_jsx(Button,{colorScheme:selected===\"All\"?\"\".concat(color):\"gray\",onClick:function onClick(){return handleSelected(\"All\");},children:\"All\"}),options.map(function(option){return/*#__PURE__*/_jsx(Button,{colorScheme:selected===option.value?\"\".concat(color):\"gray\",onClick:function onClick(){return handleSelected(option.value);},children:option.value});})]})}),/*#__PURE__*/_jsx(SimpleGrid,{columns:[1,2,3],px:4,spacing:4,children:others.filter(function(other){if(selected===\"All\"){return true;}else{return other.tags.includes(selected);}}).map(function(other){return/*#__PURE__*/_jsx(Fade,{bottom:true,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Stack,{children:/*#__PURE__*/_jsxs(CardBody,{align:\"left\",h:[null,\"40vh\"],children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",children:other.name}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",py:2,children:other.description}),/*#__PURE__*/_jsx(HStack,{spacing:2,children:other.buttons.map(function(button){return/*#__PURE__*/_jsx(Link,{href:button.href,color:\"\".concat(color,\".400\"),children:button.text},button.text);})}),/*#__PURE__*/_jsx(HStack,{flexWrap:\"wrap\",pt:4,spacing:2,children:other.badges.map(function(badge){return/*#__PURE__*/_jsx(Badge,{my:2,colorScheme:badge.colorScheme,children:badge.text},badge.text);})})]})})},other.name)});})})]})})});}","map":{"version":3,"names":["Divider","Stack","Text","Container","Box","HStack","Button","ButtonGroup","Card","CardBody","Image","Heading","SimpleGrid","Badge","Link","Center","Fade","useState","ProjectsArray","OtherProjectsArray","TagsArray","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Projects","_ref","color","projects","others","options","_useState","_useState2","_slicedToArray","selected","setSelected","handleSelected","value","children","maxW","id","as","textAlign","spacing","base","md","pb","align","direction","p","mx","concat","fontWeight","orientation","px","map","project","bottom","overflow","objectFit","src","image","size","name","py","description","buttons","button","href","text","pt","badges","badge","colorScheme","fontSize","variant","onClick","option","columns","filter","other","tags","includes","h","flexWrap","my"],"sources":["C:/Users/brbsm/Documents/GitHub/frankqgu.github.io/src/components/Projects.js"],"sourcesContent":["import {\r\n  Divider,\r\n  Stack,\r\n  Text,\r\n  Container,\r\n  Box,\r\n  HStack,\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  Image,\r\n  Heading,\r\n  SimpleGrid,\r\n  Badge,\r\n  Link,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { useState } from \"react\";\r\nimport ProjectsArray from \"./ProjectsArray\";\r\nimport OtherProjectsArray from \"./OtherProjectsArray\";\r\nimport TagsArray from \"./TagsArray\";\r\n\r\nexport default function Projects({ color }) {\r\n    const projects = ProjectsArray();\r\n    const others = OtherProjectsArray();\r\n    const options = TagsArray(\"ProjectsTags\");\r\n    \r\n    const [selected, setSelected] = useState(\"All\");\r\n\r\n    const handleSelected = (value) => {\r\n      setSelected(value);\r\n    };\r\n    \r\n  return (\r\n    <>\r\n      <Container maxW={\"3xl\"} id=\"projects\">\r\n        <Stack\r\n          as={Box}\r\n          textAlign={\"center\"}\r\n          spacing={{ base: 8, md: 14 }}\r\n          pb={{ base: 20, md: 36 }}\r\n        >\r\n          <Stack align=\"center\" direction=\"row\" p={4}>\r\n            <HStack mx={4}>\r\n              <Text color={`${color}.400`} fontWeight={800}>\r\n                03\r\n              </Text>\r\n              <Text fontWeight={800}>Projects</Text>\r\n            </HStack>\r\n            <Divider orientation=\"horizontal\" />\r\n          </Stack>\r\n          <Stack px={4} spacing={4}>\r\n            {projects.map((project) => (\r\n              <Fade bottom>\r\n                <Card\r\n                  key={project.name}\r\n                  direction={{\r\n                    base: \"column\",\r\n                  }}\r\n                  overflow=\"hidden\"\r\n                >\r\n                  <Image objectFit=\"cover\" src={project.image} />\r\n\r\n                  <Stack>\r\n                    <CardBody align=\"left\">\r\n                      <Heading size=\"md\">{project.name}</Heading>\r\n\r\n                      <Text py={2}>{project.description}</Text>\r\n\r\n                      <HStack py={2}>\r\n                        {project.buttons.map((button) => (\r\n                          <a key={button.text} href={button.href}>\r\n                            <Button color={`${color}.400`}>\r\n                              {button.text}\r\n                            </Button>\r\n                          </a>\r\n                        ))}\r\n                      </HStack>\r\n                      <HStack pt={4} spacing={2}>\r\n                        {project.badges.map((badge) => (\r\n                          <Badge\r\n                            key={badge.text}\r\n                            colorScheme={badge.colorScheme}\r\n                          >\r\n                            {badge.text}\r\n                          </Badge>\r\n                        ))}\r\n                      </HStack>\r\n                    </CardBody>\r\n                  </Stack>\r\n                </Card>\r\n              </Fade>\r\n            ))}\r\n          </Stack>\r\n          <Text color={\"gray.600\"} fontSize={\"xl\"} px={4}>\r\n            Other Projects\r\n          </Text>\r\n          <Center px={4}>\r\n            <ButtonGroup variant=\"outline\">\r\n              <Button\r\n                colorScheme={selected === \"All\" ? `${color}` : \"gray\"}\r\n                onClick={() => handleSelected(\"All\")}\r\n              >\r\n                All\r\n              </Button>\r\n              {options.map((option) => (\r\n                <Button\r\n                  colorScheme={selected === option.value ? `${color}` : \"gray\"}\r\n                  onClick={() => handleSelected(option.value)}\r\n                >\r\n                  {option.value}\r\n                </Button>\r\n              ))}\r\n            </ButtonGroup>\r\n          </Center>\r\n          <SimpleGrid columns={[1, 2, 3]} px={4} spacing={4}>\r\n            {others\r\n              .filter((other) => {\r\n                if (selected === \"All\") {\r\n                  return true;\r\n                } else {\r\n                  return other.tags.includes(selected);\r\n                }\r\n              })\r\n              .map((other) => (\r\n                <Fade bottom>\r\n                  <Card key={other.name}>\r\n                    <Stack>\r\n                      <CardBody align=\"left\" h={[null, \"40vh\"]}>\r\n                        <Heading size=\"sm\">{other.name}</Heading>\r\n\r\n                        <Text fontSize=\"sm\" py={2}>\r\n                          {other.description}\r\n                        </Text>\r\n\r\n                        <HStack spacing={2}>\r\n                          {other.buttons.map((button) => (\r\n                            <Link\r\n                              key={button.text}\r\n                              href={button.href}\r\n                              color={`${color}.400`}\r\n                            >\r\n                              {button.text}\r\n                            </Link>\r\n                          ))}\r\n                        </HStack>\r\n                        <HStack flexWrap=\"wrap\" pt={4} spacing={2}>\r\n                          {other.badges.map((badge) => (\r\n                            <Badge\r\n                              my={2}\r\n                              key={badge.text}\r\n                              colorScheme={badge.colorScheme}\r\n                            >\r\n                              {badge.text}\r\n                            </Badge>\r\n                          ))}\r\n                        </HStack>\r\n                      </CardBody>\r\n                    </Stack>\r\n                  </Card>\r\n                </Fade>\r\n              ))}\r\n          </SimpleGrid>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}