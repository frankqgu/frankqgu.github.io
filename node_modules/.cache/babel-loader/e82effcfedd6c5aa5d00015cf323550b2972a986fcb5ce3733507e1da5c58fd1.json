{"ast":null,"code":"import _slicedToArray from\"C:/Users/brbsm/Documents/GitHub/frankqgu.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Divider,Stack,Text,Container,Box,HStack,Card,CardHeader,CardBody,CardFooter,Flex,Badge,Image,List,ListItem,ListIcon,Button,ButtonGroup,Center}from\"@chakra-ui/react\";import{ChevronRightIcon}from\"@chakra-ui/icons\";import{Fade}from\"react-reveal\";import{useState,useEffect}from\"react\";import ExperienceArray from\"./ExperienceArray\";import TagsArray from\"./TagsArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Experience(_ref){var color=_ref.color;var experience=ExperienceArray();var options=TagsArray(\"ExperienceTags\");var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];useEffect(function(){if(options.length>0){setSelected(options[0].value);}},[options]);var handleSelected=function handleSelected(value){setSelected(value);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Container,{maxW:\"3xl\",id:\"experience\",children:/*#__PURE__*/_jsxs(Stack,{as:Box,textAlign:\"center\",spacing:{base:8,md:14},pb:{base:20,md:36},children:[/*#__PURE__*/_jsxs(Stack,{align:\"center\",direction:\"row\",px:4,children:[/*#__PURE__*/_jsxs(HStack,{mx:4,children:[/*#__PURE__*/_jsx(Text,{color:\"\".concat(color,\".400\"),fontWeight:800,children:\"02\"}),/*#__PURE__*/_jsx(Text,{fontWeight:800,children:\"Experience\"})]}),/*#__PURE__*/_jsx(Divider,{orientation:\"horizontal\"})]}),/*#__PURE__*/_jsx(Center,{px:4,children:/*#__PURE__*/_jsx(ButtonGroup,{variant:\"outline\",children:options.map(function(option){return/*#__PURE__*/_jsx(Button,{colorScheme:selected===option.value?\"\".concat(color):\"gray\",onClick:function onClick(){return handleSelected(option.value);},children:option.value});})})}),/*#__PURE__*/_jsx(Stack,{px:4,spacing:4,children:experience.filter(function(exp){return exp.tags.includes(selected);}).map(function(exp){return/*#__PURE__*/_jsx(Fade,{bottom:true,children:/*#__PURE__*/_jsxs(Card,{size:\"sm\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(HStack,{children:[/*#__PURE__*/_jsx(Image,{src:exp.image,h:50}),/*#__PURE__*/_jsxs(Box,{px:2,align:\"left\",children:[/*#__PURE__*/_jsx(Text,{fontWeight:600,children:exp.company}),/*#__PURE__*/_jsx(Text,{children:exp.position})]})]}),/*#__PURE__*/_jsx(Text,{px:2,fontWeight:300,children:exp.duration})]})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(Flex,{children:/*#__PURE__*/_jsx(List,{align:\"left\",spacing:3,children:exp.listItems.map(function(item,index){return/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListIcon,{boxSize:6,as:ChevronRightIcon,color:\"\".concat(color,\".500\")}),item]},index);})})})}),/*#__PURE__*/_jsx(CardFooter,{children:/*#__PURE__*/_jsx(HStack,{spacing:2,children:exp.badges.map(function(badge){return/*#__PURE__*/_jsx(Badge,{colorScheme:badge.colorScheme,children:badge.name},badge.name);})})})]},exp.company)});})})]})})});}","map":{"version":3,"names":["Divider","Stack","Text","Container","Box","HStack","Card","CardHeader","CardBody","CardFooter","Flex","Badge","Image","List","ListItem","ListIcon","Button","ButtonGroup","Center","ChevronRightIcon","Fade","useState","useEffect","ExperienceArray","TagsArray","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Experience","_ref","color","experience","options","_useState","_useState2","_slicedToArray","selected","setSelected","length","value","handleSelected","children","maxW","id","as","textAlign","spacing","base","md","pb","align","direction","px","mx","concat","fontWeight","orientation","variant","map","option","colorScheme","onClick","filter","exp","tags","includes","bottom","size","justifyContent","src","image","h","company","position","duration","listItems","item","index","boxSize","badges","badge","name"],"sources":["C:/Users/brbsm/Documents/GitHub/frankqgu.github.io/src/components/Experience.js"],"sourcesContent":["import {\r\n  Divider,\r\n  Stack,\r\n  Text,\r\n  Container,\r\n  Box,\r\n  HStack,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  Flex,\r\n  Badge,\r\n  Image,\r\n  List,\r\n  ListItem,\r\n  ListIcon,\r\n  Button,\r\n  ButtonGroup,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ExperienceArray from \"./ExperienceArray\";\r\nimport TagsArray from \"./TagsArray\";\r\n\r\nexport default function Experience({ color }) {\r\n  const experience = ExperienceArray();\r\n  const options = TagsArray(\"ExperienceTags\");\r\n  const [selected, setSelected] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (options.length > 0) {\r\n      setSelected(options[0].value);\r\n    }\r\n  }, [options]);\r\n  \r\n  const handleSelected = (value) => {\r\n    setSelected(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container maxW={\"3xl\"} id=\"experience\">\r\n        <Stack\r\n          as={Box}\r\n          textAlign={\"center\"}\r\n          spacing={{ base: 8, md: 14 }}\r\n          pb={{ base: 20, md: 36 }}\r\n        >\r\n          <Stack align=\"center\" direction=\"row\" px={4}>\r\n            <HStack mx={4}>\r\n              <Text color={`${color}.400`} fontWeight={800}>\r\n                02\r\n              </Text>\r\n              <Text fontWeight={800}>Experience</Text>\r\n            </HStack>\r\n            <Divider orientation=\"horizontal\" />\r\n          </Stack>\r\n          <Center px={4}>\r\n            <ButtonGroup variant=\"outline\">\r\n              {options.map((option) => (\r\n                <Button\r\n                  colorScheme={selected === option.value ? `${color}` : \"gray\"}\r\n                  onClick={() => handleSelected(option.value)}\r\n                >\r\n                  {option.value}\r\n                </Button>\r\n              ))}\r\n            </ButtonGroup>\r\n          </Center>\r\n          <Stack px={4} spacing={4}>\r\n            {experience\r\n              .filter((exp) => exp.tags.includes(selected))\r\n              .map((exp) => (\r\n                <Fade bottom>\r\n                  <Card key={exp.company} size=\"sm\">\r\n                    <CardHeader>\r\n                      <Flex justifyContent=\"space-between\">\r\n                        <HStack>\r\n                          <Image src={exp.image} h={50} />\r\n                          <Box px={2} align=\"left\">\r\n                            <Text fontWeight={600}>{exp.company}</Text>\r\n                            <Text>{exp.position}</Text>\r\n                          </Box>\r\n                        </HStack>\r\n                        <Text px={2} fontWeight={300}>\r\n                          {exp.duration}\r\n                        </Text>\r\n                      </Flex>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Flex>\r\n                        <List align=\"left\" spacing={3}>\r\n                          {exp.listItems.map((item, index) => (\r\n                            <ListItem key={index}>\r\n                              <ListIcon\r\n                                boxSize={6}\r\n                                as={ChevronRightIcon}\r\n                                color={`${color}.500`}\r\n                              />\r\n                              {item}\r\n                            </ListItem>\r\n                          ))}\r\n                        </List>\r\n                      </Flex>\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      <HStack spacing={2}>\r\n                        {exp.badges.map((badge) => (\r\n                          <Badge\r\n                            key={badge.name}\r\n                            colorScheme={badge.colorScheme}\r\n                          >\r\n                            {badge.name}\r\n                          </Badge>\r\n                        ))}\r\n                      </HStack>\r\n                    </CardFooter>\r\n                  </Card>\r\n                </Fade>\r\n              ))}\r\n          </Stack>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}